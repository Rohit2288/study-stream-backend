generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  password  String
  name      String
  messages  Message[]
  papers    Paper[]   // Added this field to complete the relation
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

// model Paper {
//   id          String   @id @default(auto()) @map("_id") @db.ObjectId
//   title       String
//   subject     String
//   semester    Int
//   fileUrl     String
//   uploadedBy  User     @relation(fields: [userId], references: [id])
//   userId      String   @db.ObjectId
//   uploadDate  DateTime @default(now())
// }
model Paper {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  subject     String
  semester    Int
  mst1Url     String?
  mst2Url     String?
  mst3Url     String?
  endsemUrl   String?
  notesUrl    String?
  uploadedBy  User     @relation(fields: [userId], references: [id])
  userId      String   @db.ObjectId
  uploadDate  DateTime @default(now())
}

model ChatRoom {
  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  messages  Message[]
  createdAt DateTime     @default(now())
  summary   ChatSummary?
  isActive  Boolean      @default(true)
}

model Message {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  content     String?
  sender      User         @relation(fields: [senderId], references: [id])
  senderId    String       @db.ObjectId
  room        ChatRoom     @relation(fields: [roomId], references: [id])
  roomId      String       @db.ObjectId
  attachments Attachment[]
  createdAt   DateTime     @default(now())
}

model Attachment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  filename  String
  fileUrl   String
  fileType  String
  fileSize  Int
  message   Message  @relation(fields: [messageId], references: [id])
  messageId String   @db.ObjectId
  createdAt DateTime @default(now())
}

model ChatSummary {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  chatRoomId  String   @unique @db.ObjectId
  summary     String
  createdAt   DateTime @default(now())
  chatRoom    ChatRoom @relation(fields: [chatRoomId], references: [id], onDelete: Cascade)
}